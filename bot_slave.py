# coding=utf-8
from pytg.sender import Sender
from pytg.receiver import Receiver
from pytg.utils import coroutine
from collections import deque
from time import time, sleep, strftime, gmtime
from getopt import getopt
from datetime import datetime
import sys
import re
import _thread
import random
import pytz
import configparser

# username –∏–≥—Ä–æ–≤–æ–≥–æ –±–æ—Ç–∞
bot_username = 'ChatWarsBot'

# –≤–∞—à username –∏–ª–∏ username —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞–ø—Ä–æ—Å—ã —ç—Ç–æ–º—É —Å–∫—Ä–∏–ø—Ç—É
admin_username = ''

# username –±–æ—Ç–∞ –∏/–∏–ª–∏ —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–∏–∫–∞–∑—ã
order_usernames = ''

# –∏–º—è –∑–∞–º–∫–∞
castle_name = ''

captcha_bot = 'ChatWarsCaptchaBot'

# –ø—É—Ç—å –∫ —Å–æ–∫–µ—Ç —Ñ–∞–π–ª—É
socket_path = ''

# —Ö–æ—Å—Ç —á—Ç–æ–± —Å–ª—É—à–∞—Ç—å telegram-cli
host = 'localhost'

# –ø–æ—Ä—Ç –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É —Å–ª—É—à–∞—Ç—å
port = 1338

# –≤–∫–ª—é—á–∏—Ç—å –ø—Ä–æ–∫–∞—á–∫—É –ø—Ä–∏ –ª–µ–≤–µ–ª–∞–ø–µ
lvl_up = 'lvl_def'

# –∏–º—è –≥—Ä—É–ø–ø—ã
group_name = ''

config = configparser.ConfigParser()

# user_id –±–æ—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫–æ–Ω—Ñ–∏–≥–∞
bot_user_id = ''

opts, args = getopt(sys.argv[1:], 'a:o:c:s:h:p:g:b:l:n', ['admin=', 'order=', 'castle=', 'socket=', 'host=', 'port=',
                                                          'gold=', 'lvlup=', 'group_name='])

for opt, arg in opts:
    if opt in ('-a', '--admin'):
        admin_username = arg
    elif opt in ('-o', '--order'):
        order_usernames = arg.split(',')
    elif opt in ('-c', '--castle'):
        castle_name = arg
    elif opt in ('-s', '--socket'):
        socket_path = arg
    elif opt in ('-h', '--host'):
        host = arg
    elif opt in ('-p', '--port'):
        port = int(arg)
    elif opt in ('-g', '--gold'):
        gold_to_left = int(arg)
    elif opt in ('-l', '--lvlup'):
        lvl_up = arg
    elif opt in ('-n', '--group_name'):
        group_name = arg



orders = {
    'red': 'üáÆüá≤',
    'üáÆüá≤': 'üáÆüá≤',
    'black': 'üá¨üáµ',
    'üá¨üáµ': 'üá¨üáµ',
    'white': 'üá®üáæ',
    'üá®üáæ': 'üá®üáæ',
    'yellow': 'üáªüá¶',
    'üáªüá¶': 'üáªüá¶',
    'blue': 'üá™üá∫',
    'üá™üá∫': 'üá™üá∫',
    'mint': 'üá≤üá¥',
    'üá≤üá¥': 'üá≤üá¥',
    'twilight': 'üá∞üáÆ',
    'üá∞üáÆ': 'üá∞üáÆ',
    'lesnoi_fort': 'üå≤–õ–µ—Å–Ω–æ–π —Ñ–æ—Ä—Ç',
    'les': 'üå≤–õ–µ—Å',
    'gorni_fort': '‚õ∞–ì–æ—Ä–Ω—ã–π —Ñ–æ—Ä—Ç',
    'gora': '‚õ∞',
    'morskoy_fort': '‚öìÔ∏è–ú–æ—Ä—Å–∫–æ–π —Ñ–æ—Ä—Ç',
    'cover': 'üõ°–ó–∞—â–∏—Ç–∞',
    'attack': '‚öîÔ∏è–ê—Ç–∞–∫–∞',
    'cover_symbol': 'üõ°',
    'hero': 'üèÖ–ì–µ—Ä–æ–π',
    'corovan': '/go',
    'peshera': 'üï∏–ü–µ—â–µ—Ä–∞',
    'quests': 'üó∫ –ö–≤–µ—Å—Ç—ã',
    'castle_menu': 'üè∞–ó–∞–º–æ–∫',
    'lavka': 'üèö–õ–∞–≤–∫–∞',
    'snaraga': '–°–Ω–∞—Ä—è–∂–µ–Ω–∏–µ',
    'shlem': '–®–ª–µ–º',
    'sell': '–°–∫—É–ø–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤',
    'lvl_def': '+1 üõ°–ó–∞—â–∏—Ç–∞',
    'lvl_atk': '+1 ‚öîÔ∏è–ê—Ç–∞–∫–∞',
    'lvl_off': '–í—ã–∫–ª—é—á–µ–Ω',
	'study': 'üìö –û–±—É—á–µ–Ω–∏–µ'
}

captcha_answers = {
    # –±–ª—è–¥—å, –∫–æ–ª—å—Ü–æ–≤, –Ω—É –∏ —Ö—É–π–Ω—é –∂–µ —Ç—ã –ø—Ä–∏–¥—É–º–∞–ª
    'watermelon_n_cherry': 'üçâüçí',
    'bread_n_cheese': 'üçûüßÄ',
    'cheese': 'üßÄ',
    'pizza': 'üçï',
    'hotdog': 'üå≠',
    'eggplant_n_carrot': 'üçÜü•ï',
    'dog': 'üêï',
    'horse': 'üêé',
    'goat': 'üêê',
    'cat': 'üêà',
    'pig': 'üêñ',
    'squirrel': 'üêø'
}

arena_cover = ['üõ°–≥–æ–ª–æ–≤—ã', 'üõ°–∫–æ—Ä–ø—É—Å–∞', 'üõ°–Ω–æ–≥']
arena_attack = ['üó°–≤ –≥–æ–ª–æ–≤—É', 'üó°–ø–æ –∫–æ—Ä–ø—É—Å—É', 'üó°–ø–æ –Ω–æ–≥–∞–º']
# –ø–æ–º–µ–Ω—è—Ç—å blue –Ω–∞ red, black, white, yellow –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–∞—à–µ–≥–æ –∑–∞–º–∫–∞
castle = orders[castle_name]
# —Ç–µ–∫—É—â–∏–π –ø—Ä–∏–∫–∞–∑ –Ω–∞ –∞—Ç–∞–∫—É/–∑–∞—â–∏—Ç—É, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—Å–µ–≥–¥–∞ –∑–∞—â–∏—Ç–∞, —Ç—Ä–æ–≥–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ
current_order = {'time': 0, 'order': castle}
# –∑–∞–¥–∞–µ–º –ø–æ–ª—É—á–∞—Ç–µ–ª—è –æ—Ç–≤–µ—Ç–æ–≤ –±–æ—Ç–∞: –∞–¥–º–∏–Ω –∏–ª–∏ –≥—Ä—É–ø–ø–∞
if group_name == '':
    pref = '@'
    msg_receiver = admin_username
else:
    pref = ''
    msg_receiver = group_name

sender = Sender(sock=socket_path) if socket_path else Sender(host=host,port=port)
action_list = deque([])
log_list = deque([], maxlen=30)
lt_arena = 0
lt_info = 0
get_info_diff = 1500
hero_message_id = 0
last_captcha_id = 0
gold_to_left = 0
endurance = 0
gold = 0
hero_state = 'relax'

bot_enabled = True
arena_enabled = True
les_enabled = True
peshera_enabled = False
corovan_enabled = True
order_enabled = True
auto_def_enabled = True
donate_enabled = False
quest_fight_enabled = True
building_enabled = True
building_paused = False
lt_build_try = 0
building_target = '/build_hq'

arena_running = False
arena_delay = False
arena_delay_day = -1
tz = pytz.timezone('Europe/Moscow')

@coroutine
def work_with_message(receiver):
    global bot_user_id
    global castle_name
    global building_enabled
    while True:
        msg = (yield)
        try:
            if msg['event'] == 'message' and 'text' in msg and msg['peer'] is not None:
                if bot_user_id == '' and msg['sender']['username'] == bot_username:
                    bot_user_id = msg['receiver']['peer_id']
                    log('user_id –Ω–∞–π–¥–µ–Ω: {0}'.format(bot_user_id))
                    config.read('./bot_cfg/' + str(bot_user_id) + '.cfg')
                    if config.has_section(str(bot_user_id)):
                        log('–ö–æ–Ω—Ñ–∏–≥ –Ω–∞–π–¥–µ–Ω')
                        read_config()
                        log('–ö–æ–Ω—Ñ–∏–≥ –∑–∞–≥—Ä—É–∂–µ–Ω')
                    else:
                        log('–ö–æ–Ω—Ñ–∏–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω')
                        write_config()
                        log('–ù–æ–≤—ã–π –∫–æ–Ω—Ñ–∏–≥ —Å–æ–∑–¥–∞–Ω')
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —é–∑–µ—Ä–Ω–µ–π–º–∞, —á—Ç–æ–±—ã –Ω–µ –≤—ã–≤–∞–ª–∏–≤–∞–ª—Å—è Exception
                if castle_name != 'black' and building_enabled:
                    building_enabled = False
                if 'username' in msg['sender']:
                    parse_text(msg['text'], msg['sender']['username'], msg['id'])
        except Exception as err:
            log('–û—à–∏–±–∫–∞ coroutine: {0}'.format(err))


def queue_worker():
    global get_info_diff
    global arena_delay
    global arena_delay_day
    global tz
    global lt_info
    global hero_state
    global auto_def_enabled
    global donate_enabled
    global gold
    global building_paused
    # –≥—Ä–µ–±–∞–Ω–∞—è –º–∞–≥–∏—è
    print(sender.contacts_search(bot_username))
    print(sender.contacts_search(captcha_bot))
    sleep(3)
    while True:
        try:
            if time() - lt_info > get_info_diff:
                if arena_delay and arena_delay_day != datetime.now(tz).day:
                    arena_delay = False
                lt_info = time()
                get_info_diff = random.randint(2100, 2400)
                if bot_enabled:
                    if hero_state == 'relax' or hero_state == 'building':
                        send_msg('@', bot_username, orders['hero'])
                continue

            if len(action_list):
                log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º ' + action_list[0])
                send_msg('@', bot_username, action_list.popleft())
            if hero_state == 'attack' or hero_state == 'defence':
                if after_battle_time() and not pre_battle_time():
                    #hero_state = 'relax'
                    send_msg('@', bot_username, '/report')
            if hero_state == 'relax' and auto_def_enabled and pre_battle_time():
                if donate_enabled and gold > gold_to_left:
                    log('–î–æ–Ω–∞—Ç {0} –∑–æ–ª–æ—Ç–∞ –≤ –∫–∞–∑–Ω—É –∑–∞–º–∫–∞'.format(gold - gold_to_left))
                    action_list.append('/donate {0}'.format(gold - gold_to_left))
                    gold -= gold_to_left
                update_order(castle)
            if building_paused and time() - lt_build_try >= 300:
                building_paused = False
                check_activities()
            sleep_time = random.randint(2, 5)
            sleep(sleep_time)
        except Exception as err:
            log('–û—à–∏–±–∫–∞ –æ—á–µ—Ä–µ–¥–∏: {0}'.format(err))


def read_config():
    global config
    global bot_user_id
    global bot_enabled
    global arena_enabled
    global les_enabled
    global peshera_enabled
    global corovan_enabled
    global auto_def_enabled
    global donate_enabled
    global lvl_up
    global quest_fight_enabled
    global building_target
    global building_enabled
    section=str(bot_user_id)
    if config.has_option(section,'bot_enabled'):
        bot_enabled=config.getboolean(section, 'bot_enabled')
    if config.has_option(section, 'arena_enabled'):
        arena_enabled=config.getboolean(section, 'arena_enabled')
    if config.has_option(section, 'les_enabled'):
        les_enabled=config.getboolean(section, 'les_enabled')
    if config.has_option(section, 'peshera_enabled'):
        peshera_enabled=config.getboolean(section, 'peshera_enabled')
    if config.has_option(section, 'corovan_enabled'):
        corovan_enabled=config.getboolean(section, 'corovan_enabled')
    if config.has_option(section, 'auto_def_enabled'):
        auto_def_enabled=config.getboolean(section, 'auto_def_enabled')
    if config.has_option(section, 'donate_enabled'):
        donate_enabled=config.getboolean(section, 'donate_enabled')
    if config.has_option(section, 'building_enabled'):
        building_enabled = config.getboolean(section, 'building_enabled')
    if config.has_option(section, 'building_target'):
        building_target = config.get(section, 'building_target')
    if config.has_option(section, 'lvl_up'):
        lvl_up=config.get(section, 'lvl_up')
    if config.has_option(section, 'quest_fight_enabled'):
        quest_fight_enabled=config.getboolean(section, 'quest_fight_enabled')

def write_config():
    global config
    global bot_user_id
    global bot_enabled
    global arena_enabled
    global les_enabled
    global peshera_enabled
    global corovan_enabled
    global auto_def_enabled
    global donate_enabled
    global lvl_up
    global quest_fight_enabled
    global building_target
    global building_enabled
    section = str(bot_user_id)
    if config.has_section(section):
        config.remove_section(section)
    config.add_section(section)
    config.set(section, 'bot_enabled', str(bot_enabled))
    config.set(section, 'arena_enabled', str(arena_enabled))
    config.set(section, 'les_enabled', str(les_enabled))
    config.set(section, 'peshera_enabled', str(peshera_enabled))
    config.set(section, 'corovan_enabled', str(corovan_enabled))
    config.set(section, 'auto_def_enabled', str(auto_def_enabled))
    config.set(section, 'donate_enabled', str(donate_enabled))
    config.set(section, 'lvl_up', str(lvl_up))
    config.set(section, 'building_enabled', str(building_enabled))
    config.set(section, 'building_target', str(building_target))
    config.set(section, 'quest_fight_enabled', str(quest_fight_enabled))
    with open('./bot_cfg/' + str(bot_user_id) + '.cfg', 'w+') as configfile:
        config.write(configfile)


def parse_text(text, username, message_id):
    global lt_arena
    global lt_info
    global hero_message_id
    global bot_enabled
    global arena_enabled
    global les_enabled
    global peshera_enabled
    global corovan_enabled
    global order_enabled
    global auto_def_enabled
    global donate_enabled
    global last_captcha_id
    global arena_delay
    global arena_delay_day
    global tz
    global arena_running
    global lvl_up
    global pref
    global msg_receiver
    global quest_fight_enabled
    global endurance
    global building_enabled
    global building_paused
    global lt_build_try
    global building_target
    global hero_state
    global gold
    global action_list
    if bot_enabled and username == bot_username:
        log('–ü–æ–ª—É—á–∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞. –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏—è')

        if text.find('üåü–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –ù–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å!') != -1 and lvl_up != 'lvl_off':
            log('–ø–æ–ª—É—á–∏–ª–∏ —É—Ä–æ–≤–µ–Ω—å - {0}'.format(orders[lvl_up]))
            action_list.append('/level_up')
            action_list.append(orders[lvl_up])
			
        if text.find('–û–ø—Ä–µ–¥–µ–ª–∏—Å—å —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π') != -1:
            log('–ú–æ–∂–Ω–æ —É—á–∏—Ç—å—Å—è')
            action_list.append('/class')
            action_list.append(orders[study])

        elif "–ù–∞ –≤—ã—Ö–æ–¥–µ –∏–∑ –∑–∞–º–∫–∞ –æ—Ö—Ä–∞–Ω–∞ –Ω–∏–∫–æ–≥–æ –Ω–µ –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç" in text:
            # send_msg('@', admin_username, "–ö–æ–º–∞–Ω–¥–∏—Ä, —É –Ω–∞—Å –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–∞–ø—á–æ–π! #captcha " + '|'.join(captcha_answers.keys()))
            # fwd('@', admin_username, message_id)
            log('–ö–∞–ø—á–∞ –ø–æ–ø–∞–ª–∞—Å—å')
            action_list.clear()
            bot_enabled = False
            last_captcha_id = message_id
            fwd('@', captcha_bot, message_id)

        elif '–ù–µ —É–º–Ω–∏—á–∞–π!' in text or '–¢—ã –¥–æ–ª–≥–æ –¥—É–º–∞–ª, –∞–∂ –≤—Å–ø–æ—Ç–µ–ª –æ—Ç –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è' in text:
            send_msg('@', admin_username, "–ö–æ–º–∞–Ω–¥–∏—Ä, —É –Ω–∞—Å –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–∞–ø—á–æ–π! #captcha " + '|'.join(captcha_answers.keys()))
            bot_enabled = False
            log('–ü—Ä–æ–±–ª–µ–º—ã —Å –∫–∞–ø—á–µ–π')
            if last_captcha_id != 0:
                fwd('@', admin_username, message_id)
            else:
                send_msg('@', admin_username, '–ö–∞–ø—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞?')

        elif '–ù–∞ —Å–µ–≥–æ–¥–Ω—è —Ç—ã —É–∂–µ —Å–≤–æ—ë –æ—Ç–≤–æ–µ–≤–∞–ª. –ü—Ä–∏—Ö–æ–¥–∏ –∑–∞–≤—Ç—Ä–∞.' in text:
            arena_delay = True
            arena_delay_day = datetime.now(tz).day
            log("–û—Ç–¥—ã—Ö–∞–µ–º –¥–µ–Ω–µ–∫ –æ—Ç –∞—Ä–µ–Ω—ã")
            arena_running = False
            hero_state = 'relax'

        elif corovan_enabled and text.find(' /go') != -1:
            action_list.append(orders['corovan'])
            log('–ò–¥–µ–º –∑–∞—â–∏—â–∞—Ç—å –∫–∞—Ä–∞–≤–∞–Ω')

        elif text.find('–¢—ã –æ—Ç–ø—Ä–∞–≤–∏–ª—Å—è –∏—Å–∫–∞—Ç—å –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è –≤ –ª–µ—Å.') != -1:
            hero_state = 'forest'
            log('–£—à–ª–∏ –≤ –ª–µ—Å')
            endurance -= 1

        elif text.find('–¢—ã –æ—Ç–ø—Ä–∞–≤–∏–ª—Å—è –∏—Å–∫–∞—Ç—å –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è –≤ –ø–µ—â–µ—Ä—É.') != -1:
            hero_state = 'peshera'
            log('–£—à–ª–∏ –≤ –ø–µ—â–µ—Ä—É')
            endurance -= 2

        elif text.find('–¢—ã –≤—Å—Ç–∞–ª –Ω–∞ –∑–∞—â–∏—Ç—É –ö–û–†–û–í–ê–ù–ê.') != -1:
            hero_state = 'caravan'
            log('–í—Å—Ç–∞–ª–∏ –≤ –∑–∞—â–∏—Ç—É –∫–∞—Ä–∞–≤–∞–Ω–∞')

        elif text.find('–¢—ã –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª—Å—è –∫ –∑–∞—â–∏—Ç–µ') != -1:
            hero_state = 'defence'
            log('–ö –∑–∞—â–∏—Ç–µ –≥–æ—Ç–æ–≤')

        elif text.find('–¢—ã –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª—Å—è –∫ –∞—Ç–∞–∫–µ') != -1:
            hero_state = 'attack'
            log('–ö –∞—Ç–∞–∫–µ –≥–æ—Ç–æ–≤')

        elif text.find('–¢—ã –ø–æ—à–µ–ª —Å—Ç—Ä–æ–∏—Ç—å:') != -1:
            hero_state = 'building'
            log('–£—à–µ–ª –Ω–∞ —Å—Ç—Ä–æ–π–∫—É')

        elif text.find('–ò—â–µ–º —Å–æ–ø–µ—Ä–Ω–∏–∫–∞.') != -1:
            hero_state = 'arena'
            arena_running = True
            gold -= 5
            log('–ü—Ä–∏—à–ª–∏ –Ω–∞ –∞—Ä–µ–Ω—É, –∂–¥–µ–º —Å–æ–ø–µ—Ä–Ω–∏–∫–∞')

        elif text.find('–°–ª–∏—à–∫–æ–º –º–∞–ª–æ –µ–¥–∏–Ω–∏—Ü –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏.') != -1:
            endurance = 0
            log('–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å –∫–æ–Ω—á–∏–ª–∞—Å—å')
            hero_state = 'relax'

        elif text.find('–ë–∏—Ç–≤–∞ –±–ª–∏–∑–∫–æ.') != -1 and pre_battle_time():
            if auto_def_enabled:
                log('–ì–æ—Ç–æ–≤–∏–º—Å—è –∫ –∑–∞—â–∏—Ç–µ')
                update_order(castle)
            else:
                log('–ü—Ä–∏–∫–∞–∑–∞ –∑–∞—â–∏—â–∞—Ç—å—Å—è –Ω–µ –±—ã–ª–æ, –∂–¥–µ–º –∫–æ–≥–¥–∞ –∫–æ–Ω—á–∏—Ç—Å—è –±–∏—Ç–≤–∞')
                hero_state = 'relax'

        elif text.find('–¢—ã –∑–∞–¥–µ—Ä–∂–∞–ª') != -1 or text.find('–¢—ã —É–ø—É—Å—Ç–∏–ª') != -1 or text.find('–¢—ã –ø—ã—Ç–∞–ª—Å—è –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å') != -1 or text.find('–°–ª–∏—à–∫–æ–º –ø–æ–∑–¥–Ω–æ, —Å–æ–±—ã—Ç–∏–µ –Ω–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ.') != -1 or text.find('–í–µ—Ç–µ—Ä –∑–∞–≤—ã–≤–∞–µ—Ç') != -1 or text.find('–¢—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª:') != -1 or forest_end(text) or peshera_end(text):
            #if text.find('–¢—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª:'):
            #    m = re.search('\d+', text[-20:])
            #    if m.group(0):
            #        gold += int(m.group(0))
            log('–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è –∫–æ–Ω—á–∏–ª–∏—Å—å, –æ—Ç–¥—ã—Ö–∞–µ–º')
            hero_state = 'relax'

        elif text.find('–ë–∏—Ç–≤–∞ —Å–µ–º–∏ –∑–∞–º–∫–æ–≤ —á–µ—Ä–µ–∑') != -1:
            hero_message_id = message_id
            lt_info = time()
            try_parse_status(text)
            gold = int(re.search('üí∞([0-9]+)', text).group(1))
            endurance = int(re.search('–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å: ([0-9]+)', text).group(1))
            log('–ó–æ–ª–æ—Ç–æ: {0}, –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å: {1}'.format(gold, endurance))

        elif text.find('–í –∫–∞–∑–Ω–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ—Å—É—Ä—Å–æ–≤ –¥–ª—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞') != -1:
            log('–ù–µ—Ç –¥–µ–Ω–µ–≥ –≤ –∫–∞–∑–Ω–µ')
            building_paused = True
            hero_state = 'relax'
            lt_build_try = time()

        elif arena_enabled and text.find('–≤—ã–±–µ—Ä–∏ —Ç–æ—á–∫—É –∞—Ç–∞–∫–∏ –∏ —Ç–æ—á–∫—É –∑–∞—â–∏—Ç—ã') != -1:
            arena_running = True #–Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –∞—Ä–µ–Ω–∞ –∑–∞–ø—É—â–µ–Ω–∞ —Ä—É–∫–∞–º–∏
            lt_arena = time()
            attack_chosen = arena_attack[random.randint(0, 2)]
            cover_chosen = arena_cover[random.randint(0, 2)]
            log('–ê—Ç–∞–∫–∞: {0}, –ó–∞—â–∏—Ç–∞: {1}'.format(attack_chosen, cover_chosen))
            action_list.append(attack_chosen)
            action_list.append(cover_chosen)

        elif text.find('–æ–¥–µ—Ä–∂–∞–ª –ø–æ–±–µ–¥—É') != -1 or text.find('–ù–∏—á—å—è') != -1:
            log('–í—ã–∫–ª—é—á–∞–µ–º —Ñ–ª–∞–≥ - –∞—Ä–µ–Ω–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å')
            arena_running = False
            hero_state = 'relax'

        elif building_enabled and text.find('–¢—ã –≤–µ—Ä–Ω—É–ª—Å—è —Å–æ —Å—Ç—Ä–æ–π–∫–∏:') != -1:
            log('–í–µ—Ä–Ω—É–ª–∏—Å—å —Å–æ —Å—Ç—Ä–æ–π–∫–∏')
            hero_state = 'relax'

        elif text.find('–¢–≤–æ–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –±–æ—é:') != -1:
            log('–ü–æ–ª—É—á–∏–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –±–∏—Ç–≤—ã')
            if hero_state == 'attack' or hero_state == 'defence':
                if after_battle_time() and not pre_battle_time():
                    hero_state = 'relax'

        elif text.find('–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: —Ç—ã –ø–æ–ª–æ–Ω —Å–∏–ª. –í–ø–µ—Ä–µ–¥, –Ω–∞ –ø–æ–∏—Å–∫–∏ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π!') != -1:
            send_msg('@', bot_username, orders['hero'])

        if quest_fight_enabled and text.find('/fight') != -1:
            c = re.search('(\/fight.*)', text).group(1)
            log('–ò–¥–µ–º –¥—Ä–∞—Ç—å—Å—è –≤ –ª–µ—Å')
            action_list.append(c)
            fwd(pref, msg_receiver, message_id)

        if hero_state == 'relax':
            check_activities()

        if hero_state == 'relax' and arena_running:
            arena_running = False

        # TODO –ø–æ—Å–ª–µ –æ—Ç–ª–∞–¥–∫–∏ —É–±—Ä–∞—Ç—å
        log(hero_state)

    elif username == 'ChatWarsCaptchaBot':
        if len(text) <= 4 and text in captcha_answers.values():
            sleep(3)
            action_list.append(text)
            bot_enabled = True

    # elif username == '' and text.find('/fight') != -1:
    #        c = re.search('(\/fight.*)', text).group(1))
    #        fwd("@", msg_receiver, message_id)

    elif username == 'ChatWarsTradeBot':
        if text.find('üì¶–¢–≤–æ–π —Å–∫–ª–∞–¥ —Å –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏:') != -1:
            fwd('@', 'enotobot', message_id)

    elif username == 'cwstockbot' and pre_battle_time():
        if text in orders:
            log('–ü–æ–ª—É—á–∏–ª–∏ –ø—Ä–∏–∫–∞–∑ –æ—Ç –±–æ—Ç–∞')
            update_order(orders[text])

    else:
        if username == admin_username:
            if text == '#help':
                send_msg(pref, msg_receiver, '\n'.join([
                    '#enable_bot - –í–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞',
                    '#disable_bot - –í—ã–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞',
                    '#enable_arena - –í–∫–ª—é—á–∏—Ç—å –∞—Ä–µ–Ω—É',
                    '#disable_arena - –í—ã–∫–ª—é—á–∏—Ç—å –∞—Ä–µ–Ω—É',
                    '#enable_les - –í–∫–ª—é—á–∏—Ç—å –ª–µ—Å',
                    '#disable_les - –í—ã–∫–ª—é—á–∏—Ç—å –ª–µ—Å',
                    '#enable_peshera - –í–∫–ª—é—á–∏—Ç—å –ø–µ—â–µ—Ä—ã',
                    '#disable_peshera - –í—ã–∫–ª—é—á–∏—Ç—å –ø–µ—â–µ—Ä—ã',
                    '#enable_corovan - –í–∫–ª—é—á–∏—Ç—å –∫–æ—Ä–æ–≤–∞–Ω',
                    '#disable_corovan - –í—ã–∫–ª—é—á–∏—Ç—å –∫–æ—Ä–æ–≤–∞–Ω',
                    '#enable_order - –í–∫–ª—é—á–∏—Ç—å –ø—Ä–∏–∫–∞–∑—ã',
                    '#disable_order - –í—ã–∫–ª—é—á–∏—Ç—å –ø—Ä–∏–∫–∞–∑—ã',
                    '#enable_auto_def - –í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ –¥–µ—Ñ',
                    '#disable_auto_def - –í—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ –¥–µ—Ñ',
                    '#enable_donate - –í–∫–ª—é—á–∏—Ç—å –¥–æ–Ω–∞—Ç',
                    '#disable_donate - –í—ã–∫–ª—é—á–∏—Ç—å –¥–æ–Ω–∞—Ç',
                    '#enable_quest_fight - –í–∫–ª—é—á–∏—Ç—å –±–∏—Ç–≤—É –≤–æ –≤—Ä–µ–º—è –∫–≤–µ—Å—Ç–æ–≤',
                    '#disable_quest_fight - –í—ã–∫–ª—é—á–∏—Ç—å –±–∏—Ç–≤—É –≤–æ –≤—Ä–µ–º—è –∫–≤–µ—Å—Ç–æ–≤',
                    '#enable_building - –í–∫–ª—é—á–∏—Ç—å —Å—Ç—Ä–æ–π–∫—É',
                    '#disable_building - –í—ã–∫–ª—é—á–∏—Ç—å —Å—Ç—Ä–æ–π–∫—É',
                    '#build_target - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ü–µ–ª—å —Å—Ç—Ä–æ–π–∫–∏ "/build_hq" –Ω–∞–ø—Ä–∏–º–µ—Ä'
                    '#stock_sum - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ —Ç—Ä–µ–π–¥–±–æ—Ç–∞ –±–æ—Ç—É –∫–æ—Ç–æ—Ä—ã–π —Å—á–∏—Ç–∞–µ—Ç –æ–±—â–∏–π —Å—Ç–æ–∫',
                    "#lvl_atk - –∫–∞—á–∞—Ç—å –∞—Ç–∞–∫—É",
                    "#lvl_def - –∫–∞—á–∞—Ç—å –∑–∞—â–∏—Ç—É",
                    "#lvl_off - –Ω–∏—á–µ–≥–æ –Ω–µ –∫–∞—á–∞—Ç—å",
                    '#status - –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å',
                    '#hero - –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥–µ—Ä–æ–µ',
                    '#push_order - –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–∫–∞–∑ ({0})'.format(','.join(orders)),
                    '#order - –î–µ–±–∞–≥, –ø–æ—Å–ª–µ–¥–Ω—è—è –∫–æ–º–∞–Ω–¥–∞ –∑–∞—â–∏—Ç—ã/–∞—Ç–∞–∫–∏ –∑–∞–º–∫–∞',
                    '#log - –î–µ–±–∞–≥, –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –ª–æ–≥–∞',
                    '#time - –î–µ–±–∞–≥, —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è',
                    '#lt_arena - –î–µ–±–∞–≥, –ø–æ—Å–ª–µ–¥–Ω—è—è –±–∏—Ç–≤–∞ –Ω–∞ –∞—Ä–µ–Ω–µ',
                    '#get_info_diff - –î–µ–±–∞–≥, –ø–æ—Å–ª–µ–¥–Ω—è—è —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥–µ—Ä–æ–µ',
                    '#ping - –î–µ–±–∞–≥, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∂–∏–≤ –ª–∏ –±–æ—Ç',
                ]))

            # –í–∫–ª/–≤—ã–∫–ª –±–æ—Ç–∞
            elif text == '#enable_bot':
                bot_enabled = True
                write_config()
                send_msg(pref, msg_receiver, '–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω')
            elif text == '#disable_bot':
                bot_enabled = False
                write_config()
                send_msg(pref, msg_receiver, '–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω')

            # –í–∫–ª/–≤—ã–∫–ª –∞—Ä–µ–Ω—ã
            elif text == '#enable_arena':
                arena_enabled = True
                write_config()
                send_msg(pref, msg_receiver, '–ê—Ä–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω–∞')
            elif text == '#disable_arena':
                arena_enabled = False
                write_config()
                send_msg(pref, msg_receiver, '–ê—Ä–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω–∞')

            # –í–∫–ª/–≤—ã–∫–ª –ª–µ—Å–∞
            elif text == '#enable_les':
                les_enabled = True
                write_config()
                send_msg(pref, msg_receiver, '–õ–µ—Å —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω')
            elif text == '#disable_les':
                les_enabled = False
                write_config()
                send_msg(pref, msg_receiver, '–õ–µ—Å —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω')

            # –í–∫–ª/–≤—ã–∫–ª –ø–µ—â–µ—Ä—ã
            elif text == '#enable_peshera':
                peshera_enabled = True
                write_config()
                send_msg(pref, msg_receiver, '–ü–µ—â–µ—Ä—ã —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω—ã')
            elif text == '#disable_peshera':
                peshera_enabled = False
                write_config()
                send_msg(pref, msg_receiver, '–ü–µ—â–µ—Ä—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω—ã')

            # –í–∫–ª/–≤—ã–∫–ª –∫–æ—Ä–æ–≤–∞–Ω–∞
            elif text == '#enable_corovan':
                corovan_enabled = True
                write_config()
                send_msg(pref, msg_receiver, '–ö–æ—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω—ã')
            elif text == '#disable_corovan':
                corovan_enabled = False
                write_config()
                send_msg(pref, msg_receiver, '–ö–æ—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω—ã')

            # –í–∫–ª/–≤—ã–∫–ª –∫–æ–º–∞–Ω–¥
            elif text == '#enable_order':
                order_enabled = True
                send_msg(pref, msg_receiver, '–ü—Ä–∏–∫–∞–∑—ã —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω—ã')
            elif text == '#disable_order':
                order_enabled = False
                send_msg(pref, msg_receiver, '–ü—Ä–∏–∫–∞–∑—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω—ã')

            # –í–∫–ª/–≤—ã–∫–ª –∞–≤—Ç–æ –¥–µ—Ñ
            elif text == '#enable_auto_def':
                auto_def_enabled = True
                write_config()
                send_msg(pref, msg_receiver, '–ê–≤—Ç–æ –¥–µ—Ñ —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω')
            elif text == '#disable_auto_def':
                auto_def_enabled = False
                write_config()
                send_msg(pref, msg_receiver, '–ê–≤—Ç–æ –¥–µ—Ñ —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω')

            # –í–∫–ª/–≤—ã–∫–ª –∞–≤—Ç–æ –¥–æ–Ω–∞—Ç
            elif text == '#enable_donate':
                donate_enabled = True
                write_config()
                send_msg(pref, msg_receiver, '–î–æ–Ω–∞—Ç —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω')
            elif text == '#disable_donate':
                donate_enabled = False
                write_config()
                send_msg(pref, msg_receiver, '–î–æ–Ω–∞—Ç —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω')

            # –í–∫–ª/–≤—ã–∫–ª –±–∏—Ç–≤—É –ø–æ –≤—Ä–µ–º—è –∫–≤–µ—Å—Ç–∞
            elif text == '#enable_quest_fight':
                quest_fight_enabled = True
                write_config()
                send_msg(pref, msg_receiver, '–ë–∏—Ç–≤–∞ –≤–∫–ª—é—á–µ–Ω–∞')
            elif text == '#disable_quest_fight':
                quest_fight_enabled = False
                write_config()
                send_msg(pref, msg_receiver, '–ë–∏—Ç–≤–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞')

            elif text == '#enable_building':
                building_enabled = True
                write_config()
                send_msg(pref, msg_receiver, '–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –≤–∫–ª—é—á–µ–Ω–æ')
            elif text == '#disable_building':
                building_enabled = False
                write_config()
                send_msg(pref, msg_receiver, '–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –≤—ã–∫–ª—é—á–µ–Ω–æ')

            # —á—Ç–æ –∫–∞—á–∞—Ç—å –ø—Ä–∏ –ª–µ–≤–µ–ª–∞–ø–µ
            elif text == '#lvl_atk':
                lvl_up = 'lvl_atk'
                write_config()
                send_msg(pref, msg_receiver, '–ö–∞—á–∞–µ–º –∞—Ç–∞–∫—É')
            elif text == '#lvl_def':
                lvl_up = 'lvl_def'
                write_config()
                send_msg(pref, msg_receiver, '–ö–∞—á–∞–µ–º –∑–∞—â–∏—Ç—É')
            elif text == '#lvl_off':
                lvl_up = 'lvl_off'
                write_config()
                send_msg(pref, msg_receiver, '–ù–µ –∫–∞—á–∞–µ–º –Ω–∏—á–µ–≥–æ')

            # –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å
            elif text == '#status':
                send_msg(pref, msg_receiver, '\n'.join([
                    'ü§ñ–ë–æ—Ç –≤–∫–ª—é—á–µ–Ω: {0}',
                    'üìØ–ê—Ä–µ–Ω–∞ –≤–∫–ª—é—á–µ–Ω–∞: {1}',
                    'üîé–°–µ–π—á–∞—Å –Ω–∞ –∞—Ä–µ–Ω–µ: {2}',
                    'üå≤–õ–µ—Å –≤–∫–ª—é—á–µ–Ω: {3}',
                    'üï∏–ü–µ—â–µ—Ä—ã –≤–∫–ª—é—á–µ–Ω—ã: {4}',
                    'üê´–ö–æ—Ä–æ–≤–∞–Ω—ã –≤–∫–ª—é—á–µ–Ω—ã: {5}',
                    'üá™üá∫–ü—Ä–∏–∫–∞–∑—ã –≤–∫–ª—é—á–µ–Ω—ã: {6}',
                    'üõ°–ê–≤—Ç–æ –¥–µ—Ñ –≤–∫–ª—é—á–µ–Ω: {7}',
                    'üí∞–î–æ–Ω–∞—Ç –≤–∫–ª—é—á–µ–Ω: {8}',
                    'üåü–õ–µ–≤–µ–ª–∞–ø: {9}',
                    'üë∑–°—Ç—Ä–æ–π–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞: {10}',
                    'üõ†–¶–µ–ª—å —Å—Ç—Ä–æ–π–∫–∏: {11}'
                ]).format(bot_enabled, arena_enabled, arena_running, les_enabled, peshera_enabled, corovan_enabled, order_enabled,
                          auto_def_enabled, donate_enabled, orders[lvl_up], building_enabled, building_target))

            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–µ—Ä–æ–µ
            elif text == '#hero':
                if hero_message_id == 0:
                    send_msg(pref, msg_receiver, '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–µ—Ä–æ–µ –ø–æ–∫–∞ –µ—â–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞')
                else:
                    fwd(pref, msg_receiver, hero_message_id)

            # –ü–æ–ª—É—á–∏—Ç—å –ª–æ–≥
            elif text == '#log':
                send_msg(pref, msg_receiver, '\n'.join(log_list))
                log_list.clear()

            elif text == '#lt_arena':
                send_msg(pref, msg_receiver, str(lt_arena))

            elif text == '#order':
                text_date = datetime.fromtimestamp(current_order['time']).strftime('%Y-%m-%d %H:%M:%S')
                send_msg(pref, msg_receiver, current_order['order'] + ' ' + text_date)

            elif text == '#time':
                text_date = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
                send_msg(pref, msg_receiver, text_date)

            elif text == '#ping':
                send_msg(pref, msg_receiver, '#pong')

            elif text == '#get_info_diff':
                send_msg(pref, msg_receiver, str(get_info_diff))

            elif text == '#stock_sum':
                send_msg('@', 'ChatWarsTradeBot', '/start')

            elif text.startswith('#build_target'):
                command = text.split(' ')[1]
                building_target = command
                write_config()
                send_msg(pref, msg_receiver, '–ù–æ–≤–∞—è —Ü–µ–ª—å —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞: "' + command + '" —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞')

            elif text.startswith('#push_order'):
                command = text.split(' ')[1]
                if command in orders:
                    update_order(orders[command])
                    send_msg(pref, msg_receiver, '–ö–æ–º–∞–Ω–¥–∞ ' + command + ' –ø—Ä–∏–º–µ–Ω–µ–Ω–∞')
                else:
                    send_msg(pref, msg_receiver, '–ö–æ–º–∞–Ω–¥–∞ ' + command + ' –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞')

            elif text.startswith('#captcha'):
                command = text.split(' ')[1]
                if command in captcha_answers:
                    action_list.append(captcha_answers[command])
                    bot_enabled = True
                    send_msg('@', admin_username, '–ö–æ–º–∞–Ω–¥–∞ ' + command + ' –ø—Ä–∏–º–µ–Ω–µ–Ω–∞')
                else:
                    send_msg('@', admin_username, '–ö–æ–º–∞–Ω–¥–∞ ' + command + ' –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞')


def check_activities():
    sleep_time = random.randint(2, 5)
    sleep(sleep_time)
    if not pre_battle_time() and after_battle_time():
        if quests_available():
            log('–ú–æ–∂–Ω–æ –Ω–∞ –∫–≤–µ—Å—Ç —Å—Ö–æ–¥–∏—Ç—å')
            go_to_quest()
        elif arena_available():
            log('–ú–æ–∂–Ω–æ –∏–¥—Ç–∏ –Ω–∞ –∞—Ä–µ–Ω—É')
            go_to_arena()
        elif building_available():
            log('–ú–æ–∂–Ω–æ –∏–¥—Ç–∏ –Ω–∞ —Å—Ç—Ä–æ–π–∫—É')
            go_to_building()
        else:
            log('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—á–µ–º –∑–∞–Ω—è—Ç—å—Å—è')
    else:
        log('–¢—É—Ç –≤–æ–æ–±—â–µ-—Ç–æ –±–∏—Ç–≤–∞ —Å–µ–π—á–∞—Å.')

# TODO –Ω–µ —É–≤–µ—Ä–µ–Ω —á—Ç–æ —ç—Ç–æ –ø—Ä–∏–≥–æ–¥–∏—Ç—Å—è


def quest_in_progress():
    if orders['les'] in action_list:
        return True
    elif orders['peshera'] in action_list:
        return True
    else:
        return False


def try_parse_status(text):
    global hero_state
    if re.search('–û—Ç–¥—ã—Ö', text):
        hero_state = 'relax'
    elif re.search('–í –ª–µ—Å—É. –í–µ—Ä–Ω–µ—à—å—Å—è —á–µ—Ä–µ–∑', text):
        hero_state = 'forest'
    elif re.search('–ù–∞ –∞—Ä–µ–Ω–µ', text):
        hero_state = 'arena'
    elif re.search('–í –ø–µ—â–µ—Ä–µ', text):
        hero_state = 'cave'
    elif re.search('–ù–∞ –ø–æ–±–µ—Ä–µ–∂—å–µ.', text):
        hero_state = 'beach'
    elif re.search('–ü—å–µ—à—å –≤ —Ç–∞–≤–µ—Ä–Ω–µ', text):
        hero_state = 'tavern'
    elif re.search('–í–æ–∑–∏—à—å—Å—è —Å –ö–û–†–û–í–ê–ù–ê–ú–ò', text):
        hero_state = 'caravan'
    elif re.search('–ù–∞ —Å—Ç—Ä–æ–π–∫–µ', text):
        hero_state = 'building'
    elif re.search('–ê—Ç–∞–∫–∞ –Ω–∞', text):
        hero_state = 'attack'
    elif re.search('–ó–∞—â–∏—Ç–∞', text):
        hero_state = 'defence'
    else:
        log('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å')
        send_msg('@', admin_username, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç—É—Å')


def go_to_arena():
    action_list.append(orders['castle_menu'])
    action_list.append('üìØ–ê—Ä–µ–Ω–∞')
    action_list.append('üîé–ü–æ–∏—Å–∫ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞')
    log('–¢–æ–ø–∞–µ–º –Ω–∞ –∞—Ä–µ–Ω—É')


def go_to_building():
    log('–ò–¥—ë–º –Ω–∞ —Å—Ç—Ä–æ–π–∫—É')
    action_list.append(building_target)


def building_available():
    global building_enabled
    global building_paused
    global hero_state
    if building_enabled and not building_paused and hero_state == 'relax':
        hero_state = 'building_ready'
        return True
    return False


def quests_available():
    global hero_state
    if peshera_enabled or les_enabled:
        if endurance != 0 and orders['les'] not in action_list and orders['peshera'] not in action_list and hero_state == 'relax':
            hero_state = 'quest_ready'
            return True
        return False
    return False


def arena_available():
    global gold
    global arena_enabled
    global arena_delay
    global arena_running
    global hero_state
    global tz
    global hero_state
    if arena_enabled and not arena_delay and gold >= 5 and not arena_running and hero_state == 'relax':
        curhour = datetime.now(tz).hour
        if 9 <= curhour <= 23:
            hero_state = 'arena_ready'
            return True
        return False
    return False


def go_to_quest():
    if peshera_enabled and endurance >= 2:
        if les_enabled:
            action_list.append(orders['quests'])
            action_list.append(random.choice([orders['peshera'], orders['les']]))
        else:
            action_list.append(orders['quests'])
            action_list.append(orders['peshera'])

    elif les_enabled and not peshera_enabled and endurance >= 1 and orders['les'] not in action_list:
        action_list.append(orders['quests'])
        action_list.append(orders['les'])


def forest_end(text):
    if text.find('–í –∫—Ä–æ–Ω–∞—Ö –¥–µ—Ä–µ–≤—å–µ–≤ —Ç—ã') != -1 or text.find('–ü—Ä–∏ –ø—Ä–æ–≥—É–ª–∫–µ –ø–æ –ª–µ—Å—É —Ç–µ–±—è –ø—Ä–∏–≤–ª–µ–∫ –µ–ª–µ –∑–∞–º–µ—Ç–Ω—ã–π –∑–∞–ø–∞—Ö —Å–æ—Å–Ω—ã') != -1 or text.find('–í –ª–µ—Å—É —Ç—ã –æ—Ç–¥–æ—Ö–Ω—É–ª –æ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã—Ö –±–∏—Ç–≤') != -1 or text.find('–¢—ã –≤–µ—Ä–Ω—É–ª—Å—è –∏–∑ –ª–µ—Å–∞.') != -1 or text.find('–û—Å—Ç—É–ø–∏–≤—à–∏—Å—å, —Ç—ã –≤–ª—è–ø–∞–ª—Å—è –≤ –∫—É—á—É –¥–µ—Ä—å–º–∞.') != -1:
        return True
    return False


def peshera_end(text):
    if text.find('–û–Ω–∏ –æ–∫–∞–∑–∞–ª–∏—Å—å –æ—á–µ–Ω—å –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–º–∏.') != -1 or text.find('–ü—Ä–∏—à–ª–æ—Å—å –≤—ã–±–∏—Ä–∞—Ç—å—Å—è –∏–∑ –ø–µ—â–µ—Ä—ã.') != -1 or text.find('–¢–µ–±—è –∑–∞–≤–∞–ª–∏–ª–æ –∏–∑–≤–µ—Å—Ç–Ω—è–∫–æ–º,') != -1 or text.find('–ù–∞–≤–µ—Ä–Ω–æ–µ –ª—É—á—à–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å—Å—è –∏ —É–π—Ç–∏. ') != -1 or text.find('–ò—Ö –±—ã–ª–æ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ') != -1:
        return True
    return False


def pre_battle_time():
    global tz
    hour = datetime.now(tz).hour
    minute = datetime.now(tz).minute
    if hour == 23 or hour == 3 or hour == 7 or hour == 11 or hour == 15 or hour == 19:
        if minute >= 40:
            return True
        else:
            return False
    else:
        return False


def after_battle_time():
    global tz
    hour = datetime.now(tz).hour
    minute = datetime.now(tz).minute
    if hour == 0 or hour == 4 or hour == 8 or hour == 12 or hour == 16 or hour == 20:
        if minute > 4:
            return True
        else:
            return False
    else:
        return True


def send_msg(pref, to, message):
    sender.send_msg(pref + to, message)


def fwd(pref, to, message_id):
    sender.fwd(pref + to, message_id)


def update_order(order):
    global hero_state
    current_order['order'] = order
    current_order['time'] = time()
    if order == castle:
        action_list.append(orders['cover'])
        hero_state = 'defence'
    else:
        action_list.append(orders['attack'])
        hero_state = 'attack'
    action_list.append(order)


def log(text):
    message = '{0:%Y-%m-%d+ %H:%M:%S}'.format(datetime.now()) + ' ' + text
    print(message)
    log_list.append(message)


if __name__ == '__main__':
    receiver = Receiver(sock=socket_path) if socket_path else Receiver(port=port)
    receiver.start()  # start the Connector.
    _thread.start_new_thread(queue_worker, ())
    receiver.message(work_with_message(receiver))
    receiver.stop()